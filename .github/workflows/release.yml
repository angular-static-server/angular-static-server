name: Release
on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]+-*'

permissions:
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      IMAGE_REPO: ghcr.io/${{ github.repository_owner }}/server
      VERSION: ${{ github.ref_name }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version-file: 'go.mod'
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'
          cache-dependency-path: 'test/angular/package-lock.json'
      - name: Install Angular Test App
        run: yarn install --frozen-lockfile --non-interactive
        working-directory: ./test/angular
      - name: Lint
        run: gofmt -l .
      - name: Build
        run: go build
      - name: Test
        run: go test ./... -coverprofile=coverage.out
      - name: Coverage
        run: go tool cover -func=coverage.out

      - name: Login to ghcr.io
        run: echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io --username ${{ github.actor }} --password-stdin
      - id: major-version
        run: echo "version=${VERSION%%.*}" >> "$GITHUB_OUTPUT"
      - name: 'Container: Build image'
        run: |
          docker build \
            --build-arg="RELEASE_VERSION=$VERSION"
            --target server \
            --tag $IMAGE_REPO:$VERSION \
            --tag $IMAGE_REPO:${{ steps.major-version.outputs.version }} \
            --tag $IMAGE_REPO:latest \
            .
        env:
          DOCKER_BUILDKIT: 1
      - name: 'Container: Publish image'
        run: docker push $IMAGE_REPO:$VERSION
      - name: 'Container: Publish image as major version'
        if: contains(github.ref_name, '-') == false
        run: docker push $IMAGE_REPO:${{ steps.major-version.outputs.version }}
      - name: 'Container: Publish image as latest'
        if: contains(github.ref_name, '-') == false
        run: docker push $IMAGE_REPO:latest